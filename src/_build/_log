### Starting build.
# Target: mini.ml.depends, tags: { extension:ml, file:mini.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules mini.ml > mini.ml.depends
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/local/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules lexer.ml > lexer.ml.depends # cached
# Target: error.ml.depends, tags: { extension:ml, file:error.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules error.ml > error.ml.depends # cached
# Target: error.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:error.cmo, file:error.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o error.cmo error.ml # cached
# Target: lextTest.mly.depends, tags: { extension:mly, file:lextTest.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --explain --raw-depend --ocamldep '/usr/local/bin/ocamldep.opt -modules' lextTest.mly > lextTest.mly.depends # cached
# Target: lextTest.mly, tags: { byte, compile, extension:ml, extension:mly, file:lextTest.ml, file:lextTest.mly, infer, menhir, ocaml, parser, quiet }
menhir --explain --ocamlc /usr/local/bin/ocamlc.opt --infer lextTest.mly # cached
# Target: lextTest.mli.depends, tags: { extension:mli, file:lextTest.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules lextTest.mli > lextTest.mli.depends # cached
# Target: lextTest.cmi, tags: { byte, compile, extension:mli, file:lextTest.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o lextTest.cmi lextTest.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o lexer.cmo lexer.ml # cached
# Target: mini.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:mini.cmo, file:mini.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o mini.cmo mini.ml
+ /usr/local/bin/ocamlc.opt -c -o mini.cmo mini.ml
File "mini.ml", line 14, characters 16-33:
Warning 10: this expression should have type unit.
# Target: error.cmx, tags: { compile, extension:cmx, extension:ml, file:error.cmx, file:error.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -o error.cmx error.ml # cached
# Target: lextTest.ml.depends, tags: { extension:ml, file:lextTest.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules lextTest.ml > lextTest.ml.depends # cached
# Target: lextTest.cmx, tags: { compile, extension:cmx, extension:ml, file:lextTest.cmx, file:lextTest.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -o lextTest.cmx lextTest.ml # cached
# Target: lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -o lexer.cmx lexer.ml # cached
# Target: mini.cmx, tags: { compile, extension:cmx, extension:ml, file:mini.cmx, file:mini.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -o mini.cmx mini.ml
+ /usr/local/bin/ocamlopt.opt -c -o mini.cmx mini.ml
File "mini.ml", line 14, characters 16-33:
Warning 10: this expression should have type unit.
# Target: mini.native, tags: { dont_link_with, extension:native, file:mini.native, link, native, ocaml, program, quiet }
/usr/local/bin/ocamlopt.opt error.cmx lextTest.cmx lexer.cmx mini.cmx -o mini.native
# Compilation successful.
